# -*- coding: utf-8 -*-
"""Survey_lung_cancer using neive bayes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vqygbKAnDsRoM5v1mr-P0p3EEf9t9NW1
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/survey lung cancer.csv')

df.head(10)

df.tail(10)

df.shape

df.info()

df.describe()

a=df['AGE']
plt.plot(a)

b=df['ALLERGY ']
c=df['CHRONIC DISEASE']
plt.scatter(b,c)

d=df['PEER_PRESSURE']
plt.hist(d)

e=df['ANXIETY']
plt.bar(e,width=100,height=100)

g=df['AGE']
plt.pie(g)

A=df['ANXIETY']
B=df['LUNG_CANCER']
sns.lineplot(x=A,y=B,data=df)

C=df['COUGHING']
D=df['GENDER']
sns.scatterplot(x=C,y=D,data=df)

E=df['AGE']
F=df['ALCOHOL CONSUMING']
sns.barplot(x=E,y=F,data=df)

sns.countplot(x='AGE',data=df)

sns.pairplot(df,hue='AGE')

df.isnull().sum()

s=df['AGE']
sns.boxplot(s)

from sklearn.preprocessing import LabelEncoder
L=LabelEncoder()
a=df['LUNG_CANCER']
df['LUNG_CANCER']=L.fit_transform(a)
b=df['GENDER']
df['GENDER']=L.fit_transform(b)

x=df.drop(['LUNG_CANCER'],axis=1)
x

y=df['LUNG_CANCER']
y

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.20,random_state=0)

x_train.shape

x_test.shape

from sklearn.preprocessing import StandardScaler

std=StandardScaler()

a=std.fit_transform(x_train)

from sklearn.naive_bayes import GaussianNB
gnb=GaussianNB()
gnb.fit(x_train,y_train)

pred=gnb.predict(x_test)

from sklearn.metrics import accuracy_score
accuracy_score(pred,y_test)

from sklearn.metrics import confusion_matrix
confusion_matrix(pred,y_test)

from sklearn.naive_bayes import MultinomialNB
mnb=MultinomialNB()
mnb.fit(x_train,y_train)

pred1=mnb.predict(x_test)

from sklearn.metrics import accuracy_score
accuracy_score(pred1,y_test)

from sklearn.metrics import confusion_matrix
confusion_matrix(pred1,y_test)

from sklearn.naive_bayes import BernoulliNB
bnb=BernoulliNB()
bnb.fit(x_train,y_train)

pred2=bnb.predict(x_test)

from sklearn.metrics import accuracy_score
accuracy_score(pred2,y_test)

from sklearn.metrics import confusion_matrix
confusion_matrix(pred2,y_test)

from sklearn.naive_bayes import ComplementNB
cnb=ComplementNB()
cnb.fit(x_train,y_train)

pred3=cnb.predict(x_test)

from sklearn.metrics import accuracy_score
accuracy_score(pred3,y_test)

from sklearn.metrics import confusion_matrix
confusion_matrix(pred3,y_test)